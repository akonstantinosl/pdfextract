name: Build Windows Setup Wizard (EXE)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  APP_NAME: "PDFExtract"
  PYTHON_VERSION: "3.12.11"
  POPPLER_VERSION: "24.02.0"
  PYTHON_EMBED_ZIP: "python-3.12.11-embed-amd64.zip"
  POPPLER_ZIP: "Release-24.02.0-0.zip"
  POPPLER_DIR_NAME: "poppler-24.02.0"
  # Folder staging yang akan dibaca oleh Inno Setup
  STAGING_DIR: "dist" 

jobs:
  build-installer:
    runs-on: windows-latest

    steps:
    # 1. Checkout kode (main.py, models/, requirements.txt, dan setup.iss baru Anda)
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Setup Python (untuk menjalankan pip download)
    - name: Set up Python for build scripts
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # --- Bagian 1: Kumpulkan Semua "Bahan" ke folder 'dist' ---

    # 3. Buat folder staging 'dist'
    - name: Create staging directory
      run: mkdir ${{ env.STAGING_DIR }}

    # 4. Unduh & Ekstrak Python Embeddable
    - name: Download and extract Python Embeddable
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://www.python.org/ftp/python/${{ env.PYTHON_VERSION }}/${{ env.PYTHON_EMBED_ZIP }}" -OutFile "${{ env.PYTHON_EMBED_ZIP }}"
        New-Item -ItemType Directory -Path "${{ env.STAGING_DIR }}\python_embed"
        Expand-Archive -Path "${{ env.PYTHON_EMBED_ZIP }}" -DestinationPath "${{ env.STAGING_DIR }}\python_embed"

    # 5. Edit file .pth (Wajib untuk pip)
    - name: Uncomment 'import site' in .pth file
      shell: pwsh
      run: |
        $pth_file = "${{ env.STAGING_DIR }}\python_embed\python312._pth"
        (Get-Content $pth_file) -replace '#import site', 'import site' | Set-Content $pth_file

    # 6. Unduh get-pip.py
    - name: Download get-pip.py
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://bootstrap.pypa.io/get-pip.py" -OutFile "${{ env.STAGING_DIR }}\get-pip.py"

    # 7. Unduh & Ekstrak Poppler
    - name: Download and extract Poppler
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://github.com/osch/poppler-windows/releases/download/v${{ env.POPPLER_VERSION }}-0/${{ env.POPPLER_ZIP }}" -OutFile "${{ env.POPPLER_ZIP }}"
        New-Item -ItemType Directory -Path "${{ env.STAGING_DIR }}\poppler_bin"
        Expand-Archive -Path "${{ env.POPPLER_ZIP }}" -DestinationPath "${{ env.STAGING_DIR }}\poppler_bin"

    # 8. Salin file aplikasi Anda
    - name: Copy application files
      shell: cmd
      run: |
        copy main.py ${{ env.STAGING_DIR }}\main.py
        copy requirements.txt ${{ env.STAGING_DIR }}\requirements.txt
        xcopy /E /I /Q models ${{ env.STAGING_DIR }}\models

    # 9. Unduh semua 'wheels'
    - name: Download Python wheels
      run: |
        mkdir ${{ env.STAGING_DIR }}\wheels
        pip download -d ${{ env.STAGING_DIR }}\wheels -r ${{ env.STAGING_DIR }}\requirements.txt

    # --- Bagian 2: Buat Setup Wizard (.exe) ---

    # 10. Install Inno Setup di server GitHub
    - name: Install Inno Setup
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://files.jrsoftware.org/is/6/is-stable.exe" -OutFile "is-stable.exe"
        Start-Process -FilePath "is-stable.exe" -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART", "/NOCANCEL", "/SP-", "/LOG=inno_setup_install.log" -Wait
        # Tambahkan Inno Setup ke PATH environment
        $Env:Path += ";C:\Program Files (x86)\Inno Setup 6"
      
    # 11. Unduh file Bahasa Indonesia untuk Inno Setup
    - name: Download Inno Setup Indonesian Language File
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://github.com/jrsoftware/issrc/raw/main/Files/Languages/Indonesian.isl" -OutFile "C:\Program Files (x86)\Inno Setup 6\Languages\Indonesian.isl"
        
    # 12. Jalankan compiler Inno Setup
    - name: Compile Inno Setup installer
      shell: cmd
      run: |
        iscc.exe "setup.iss"

    # 13. Upload Setup.exe sebagai artifact
    # Inno Setup secara default menempatkan output di folder 'Output'
    - name: Upload installer artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}_Windows_Setup
        path: Output\PDFExtract-Setup-v1.0.exe
